#! /usr/bin/python3
#
# wiki_settings.py -- convert settings from and to wiki tables syntax.
#
# Requires: urllib
#
# 2020-12-27, v0.1 jw   - initial draught

import sys, re, urllib.request

class WikiTable:
  """
     read and write operations on a wiki-table
  """
  def __init__(self, url, heading_re=None, skipcoint=0, prefer_raw=True):
    """
        A WikiTable object can be generated by reading a url. in case of local file 
        url, the leading 'file://' part can be omitted, relative paths are supported.
        HTML, mediawiki, and markdown are supported.
        
        Importing data can select one out of ultiple tables found in the url or file
        resource using heading_re and/or skipcount.
        Normally the first table found is imported. Any leading and trailing texts are ignored.
        If heading_re is not none, then a matching <Hn> or ## or ====== style heading searched.
        Searching for tables then starts after this heading. If there is no match
        import fails, just as if there were no tables in the resource.
        skipcount can be a positive integer. It skips the given number of tables.

        intial import can be suppressed by passing url=None
    """
    if url is None:
      self.url = None
      self.document = ''
    else:
      m = re.match(r'\w+://', url)
      if m and m.group(0).lower() == 'file://': url = url[m.end():]
 
      m = re.match(r'\w+://', url)
      if m:
        self._import_url(url, prefer_raw)
      else:
        self._import_file(url)


  def _import_url(self, urls, prefer_raw):
    if type(urls) == type(""): urls = [ urls ]
    if prefer_raw: urls.insert(0, urls[0] + "?action=raw")
    for url in urls:
      try:
        a = urllib.request.urlopen(url)
        self.document = a.read()
        self.url = a.url
      except Exception as e:
        print("Failed to load URL '%s' :" % url, e, file=sys.stderr)
      else:
        break


  def _import_file(self, filename):
    try:
      fd = open(filename)
      self.document. fd.read()
      self.url = 'file://'+filename
    except Exception as e:
      print("Failed to load file '%s' :" % url, e, file=sys.stderr)


# ----------------------------------------
if __name__ == "__main__":
  t = WikiTable('http://wiki.fablab-nuernberg.de/w/Nova_35')
  print("%d bytes loaded from %s" % (len(t.document), t.url))

